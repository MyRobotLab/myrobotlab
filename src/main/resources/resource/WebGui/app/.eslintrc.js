const path = require("path")

module.exports = {
  env: {
    browser: true,
    es2021: true,
    amd: true,
    node: true,
    jest: true,
  },
  extends: [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:@tanstack/eslint-plugin-query/recommended",
    "plugin:testing-library/react",
    "plugin:jest-dom/recommended",
  ],
  ignorePatterns: ["src/models/", "src/target/"],
  overrides: [
    {
      files: ["*.ts", "*.tsx"],
      parser: "@typescript-eslint/parser",
      extends: [
        "standard-with-typescript",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      parserOptions: {
        project: [path.resolve(__dirname, "./tsconfig.json"), path.resolve(__dirname, "./tsconfig.vite.json")],
      },
      rules: {
        quotes: "off",
        "@typescript-eslint/quotes": "off",
        "@typescript-eslint/comma-dangle": "off",
        "@typescript-eslint/triple-slash-reference": "warn",
        "@typescript-eslint/space-before-function-paren": "warn",
        "@typescript-eslint/explicit-function-return-type": "warn",
        "@typescript-eslint/no-namespace": "warn",
        "@typescript-eslint/member-delimiter-style": "off",
      },
    },
  ],
  parserOptions: {
    ecmaVersion: "latest",
    sourceType: "module",
  },
  plugins: ["react", "@tanstack/query", "testing-library", "jest-dom"],
  rules: {
    "react/display-name": "warn",
    "react/prop-types": "off", // switch to typescript instead
    "no-unused-vars": "warn",
    "react/jsx-key": "warn",
    "no-undef": "error",
    "no-unsafe-optional-chaining": "warn",
    "no-empty-pattern": "warn",
    "no-fallthrough": "warn",
    "no-case-declarations": "warn",
    "no-redeclare": "warn",
    "no-prototype-builtins": "warn",
    "no-useless-escape": "warn",
    "react/no-unescaped-entities": "warn",
    "react/jsx-no-target-blank": "warn",
    "react/jsx-no-undef": "error",
    "react/no-unused-prop-types": "warn",
    "react/no-unused-state": "warn",
    "react/no-unsafe": "warn",
    "react/react-in-jsx-scope": "off",
    "no-restricted-syntax": "error",
    quotes: "off",
    "@typescript-eslint/quotes": "off",
    "multiline-ternary": "off",
    "testing-library/no-wait-for-multiple-assertions": "warn",
    "testing-library/prefer-screen-queries": "warn",
    "testing-library/no-node-access": "warn",
    "testing-library/no-unnecessary-act": "warn",
    "testing-library/no-wait-for-side-effects": "warn",
    "testing-library/await-async-utils": "warn",
  },
}
